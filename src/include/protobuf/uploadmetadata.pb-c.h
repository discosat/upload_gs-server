/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: uploadmetadata.proto */

#ifndef PROTOBUF_C_uploadmetadata_2eproto__INCLUDED
#define PROTOBUF_C_uploadmetadata_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct UploadMetadataItem UploadMetadataItem;
typedef struct UploadMetadata UploadMetadata;


/* --- enums --- */


/* --- messages --- */

struct  UploadMetadataItem
{
  ProtobufCMessage base;
  /*
   * Destination file path on the client. Example: "/tmp/data/module.so"
   */
  char *file_location;
  uint32_t dtp_server_address;
  uint32_t payload_id;
  /*
   * Using fixed32 is efficient for 32-bit checksums like CRC32.
   * For larger hashes like SHA-256, you might use the 'bytes' type instead.
   */
  uint32_t checksum;
};
#define UPLOAD_METADATA_ITEM__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&upload_metadata_item__descriptor) \
    , (char *)protobuf_c_empty_string, 0, 0, 0 }


struct  UploadMetadata
{
  ProtobufCMessage base;
  size_t n_items;
  UploadMetadataItem **items;
};
#define UPLOAD_METADATA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&upload_metadata__descriptor) \
    , 0,NULL }


/* UploadMetadataItem methods */
void   upload_metadata_item__init
                     (UploadMetadataItem         *message);
size_t upload_metadata_item__get_packed_size
                     (const UploadMetadataItem   *message);
size_t upload_metadata_item__pack
                     (const UploadMetadataItem   *message,
                      uint8_t             *out);
size_t upload_metadata_item__pack_to_buffer
                     (const UploadMetadataItem   *message,
                      ProtobufCBuffer     *buffer);
UploadMetadataItem *
       upload_metadata_item__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   upload_metadata_item__free_unpacked
                     (UploadMetadataItem *message,
                      ProtobufCAllocator *allocator);
/* UploadMetadata methods */
void   upload_metadata__init
                     (UploadMetadata         *message);
size_t upload_metadata__get_packed_size
                     (const UploadMetadata   *message);
size_t upload_metadata__pack
                     (const UploadMetadata   *message,
                      uint8_t             *out);
size_t upload_metadata__pack_to_buffer
                     (const UploadMetadata   *message,
                      ProtobufCBuffer     *buffer);
UploadMetadata *
       upload_metadata__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   upload_metadata__free_unpacked
                     (UploadMetadata *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*UploadMetadataItem_Closure)
                 (const UploadMetadataItem *message,
                  void *closure_data);
typedef void (*UploadMetadata_Closure)
                 (const UploadMetadata *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor upload_metadata_item__descriptor;
extern const ProtobufCMessageDescriptor upload_metadata__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_uploadmetadata_2eproto__INCLUDED */